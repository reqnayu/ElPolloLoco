body {
	margin: 0;
	height: 100vh;
	width: 100vw;
	display: grid;
	place-items: center;
}

* {
	/* outline: 1px solid black; */
}

*:has(> .open) > :not(.open) {
	pointer-events: none;
}

#game {
	position: relative;
	overflow: hidden;
	display: grid;
	grid-template-areas: "a";
}

#game:has(#pause-screen.open) > :not(:is(#pause-screen, .confirmation-container)) {
	filter: blur(1px);
}

#game > * {
	grid-area: a;
}

canvas {
	transition: filter 125ms;
}

#game:fullscreen > * {
	margin: auto;
}

#pause-screen {
	display: grid;
	border-radius: calc(var(--game-width) * 0.01);
	overflow: hidden;
	grid-template-areas: "a";
	width: fit-content;
	height: fit-content;
	margin: auto;
}

.menu-btns {
	margin: auto;
	gap: calc(var(--game-width) * 0.015);
}

.btn {
	color: var(--txt-color-light);
	padding: calc(var(--game-width) * 0.01) calc(var(--game-width) * 0.04);
	display: flex;
	justify-content: center;
	transition-property: background-color, color;
	transition-duration: 125ms;
	border-radius: calc(var(--game-width) * 0.01);
	border: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
}

.btn-primary {
	background-color: var(--bg-color-btn);
}

@media (hover: hover) {
	.btn-primary:hover {
		color: var(--txt-color-hover);
		background-color: var(--bg-color-btn-hover);
	}
}

.btn-secondary {
	color: var(--txt-color-dark);
}

@media (hover: hover) {
	.btn-secondary:hover {
		color: var(--txt-color-hover);
		background-color: var(--bg-color-btn-hover);
	}
}

.menu-content {
	display: none;
}

.menu-content:has(.open) {
	display: grid;
	place-items: center;
}

.grid-center {
	display: grid;
	place-items: center;
}

.container {
	background-color: var(--bg-color-container);
	position: absolute;
	inset: 0;
	padding: calc(var(--game-width) * 0.05) calc(var(--game-width) * 0.15);
}

.container:not(.open) {
	display: none !important;
}

.close-btn {
	font-family: "Permanent Marker";
	--size: calc(var(--game-width) * 0.04);
	--inset-size: calc(var(--size) / 3);
	width: var(--size);
	height: var(--size);
	border-radius: 999px;
	padding: 0;
	display: grid;
	place-items: center;
	line-height: 100%;
	position: absolute;
	inset: var(--inset-size) var(--inset-size) auto auto;
}

#keyBinds {
	gap: calc(var(--game-width) * 0.01);
	width: 75%;
}

#keyBinds .row {
	justify-content: space-between;
	padding: calc(var(--game-width) * 0.005);
	border-radius: 9999px;
	background-color: var(--bg-color-btn);
}

#keyBinds .action {
	white-space: nowrap;
}

#keyBinds .key {
	cursor: pointer;
}

#keyBinds .key:hover {
	background-color: var(--bg-color-btn-hover);
}

#keyBindModal:not(.open) {
	display: none;
}

#keyBindModal.open {
	position: fixed;
	inset: 0;
	display: grid;
	place-items: center;
	background-color: #00000030;
}

#gui {
	width: var(--game-width);
	height: var(--game-height);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	transition: filter 125ms;
}

#gui-content {
	flex-grow: 1;
}

#keyBindModal > div {
	all: initial;
	font-family: Arial, Helvetica, sans-serif;
	width: 30%;
	height: 15%;
	background-color: #fefefe;
	padding: 5%;
}

#gui :is(header, footer) {
	height: calc(var(--game-width) * 0.0865);
	justify-content: space-between;
	align-items: center;
	padding: 0 calc(var(--game-width) * 0.01);
}

#gui header {
	justify-content: space-between;
}

#gui .fullscreen:not(.active) img:last-of-type {
	display: none;
}

#gui .fullscreen.active img:first-of-type {
	display: none;
}

.btn-input {
	--size: calc(var(--game-width) * 0.08);
	border-radius: 999px;
	width: var(--size);
	height: var(--size);
	padding: 0;
	display: grid;
	place-items: center;
	opacity: 0.75;
	position: relative;
}

.btn-input .keyboard {
	position: absolute;
	font-family: "Keyboard";
	font-size: calc(var(--game-width) * 0.04);
	/* background: linear-gradient(#00000050, #00000050) no-repeat;
	background-size: calc(100% - 13px) calc(100% - 15px); */
	line-height: 100%;
	pointer-events: none;
}

@media (hover: none) {
	.btn-input .keyboard {
		display: none;
	}
}

.keyboard::before {
	content: "";
	position: absolute;
	/* inset: 0; */
	inset: calc(var(--game-width) * 0.004) calc(var(--game-width) * 0.004) calc(var(--game-width) * 0.004)
		calc(var(--game-width) * 0.003);
	background-color: #00000050;
	border-radius: calc(var(--game-width) * 0.007);
}

.keyboard span {
	display: block;
	translate: 0 50%;
}

.keyboard.ul {
	inset: -20% auto auto -20%;
}

.keyboard.ur {
	inset: -20% -20% auto auto;
}

.keyboard.dl {
	inset: auto auto -20% -20%;
}

.keyboard.dr {
	inset: auto -20% -20% auto;
}

.keyboard.space {
	translate: -40% 0;
	scale: 0.5 1;
}

#gui img {
	filter: invert(1);
	width: 75%;
	pointer-events: none;
}

.confirmation-container {
	position: fixed;
	inset: 0;
	background-color: #00000010;
	display: grid;
	place-items: center;
}

.confirmation {
	background-color: var(--bg-color-container);
	padding: calc(var(--game-width) * 0.05);
	gap: calc(var(--game-width) * 0.05);
	border-radius: calc(var(--game-width) * 0.01);
}

.confirmation .row {
	gap: calc(var(--game-width) * 0.02);
}

/* .confirmation button {
	padding: calc(var(--game-width) * 0.01) calc(var(--game-width) * 0.02);
	min-width: 80px;
}

.confirmation .cancel {
	border: 1px solid lightblue;
}

.confirmation .affirm {
	background-color: darkblue;
	color: white;
} */
