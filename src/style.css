body {
	margin: 0;
	height: 100vh;
	width: 100vw;
	display: grid;
	place-items: center;
	background: url(app/assets/img/gui/floor.jpg) center/cover no-repeat;
}

* {
	/* outline: 1px solid black; */
}

*:has(> .open) > :not(.open) {
	pointer-events: none;
}

#game {
	position: relative;
	display: grid;
	grid-template-areas: "a";
	cursor: var(--cursor-normal);
}

#game:has(#main-menu.open) > :not(:is(#main-menu, .confirmation-container, .loading)) {
	filter: blur(1px);
}

#game > * {
	grid-area: a;
}

#game:not(:fullscreen)::before {
	content: "";
	position: absolute;
	inset: 0;
	inset: calc(var(--game-width) * -0.07) calc(var(--game-width) * -0.075);
	z-index: 1;
	background: url(app/assets/img/gui/frame.png) center no-repeat;
	background-size: 100% 100%;
	pointer-events: none;
	border-radius: calc(var(--game-width) * 0.005);
}

canvas {
	transition: filter 125ms;
}

#game:fullscreen > * {
	margin: auto;
}

#game:fullscreen .fullscreen img:first-of-type {
	display: none;
}

#game:not(:fullscreen) .fullscreen img:last-of-type {
	display: none;
}

#main-menu.start {
	inset: 0;
	translate: unset;
	width: 100%;
	height: 100%;
	border-radius: 0;
	background: url(app/assets/img/gui/cover.webp) center/100% no-repeat;
}

#main-menu.start > .menu-btns {
	padding: 0 5%;
	margin-right: 50%;
}

#main-menu.start .btn-secondary {
	background-color: var(--bg-color-btn-light);
}

#main-menu.start > .close-btn {
	display: none;
}

#main-menu.start :is([data-click="RESUME_GAME"], [data-click="RESTART_GAME"]) {
	display: none;
}

#main-menu.start .title {
	text-align: center;
	font-size: 3em;
	color: var(--bg-color-container);
	text-shadow: 1px 0 0 var(--border-color-btn), -1px 0 0 var(--border-color-btn), 0 1px 0 var(--border-color-btn),
		0 -1px var(--border-color-btn);
}

#main-menu.start .splash-screen {
	font-size: calc(var(--game-width) * 0.04);
	text-align: center;
	animation: splash-screen 500ms infinite alternate ease-in-out;
	text-shadow: 1px 0 0 var(--border-color-btn), -1px 0 0 var(--border-color-btn), 0 1px 0 var(--border-color-btn),
		0 -1px var(--border-color-btn);
}

#main-menu.start .splash-screen + div {
	display: none;
}

@keyframes splash-screen {
	0% {
		color: var(--txt-color-light);
	}
	100% {
		color: var(--bg-color-btn-light);
	}
}

/* #main-menu.start {
	color: var(--txt-color-light);
	text-shadow: 1px 0 0 var(--border-color-btn), -1px 0 0 var(--border-color-btn), 0 1px 0 var(--border-color-btn),
		0 -1px var(--border-color-btn);
} */

#main-menu {
	overflow: hidden;
	grid-template-areas: "a";
}

#main-menu.start {
	display: grid;
}

#main-menu:not(.start) {
	margin: auto;
}

#main-menu:not(.start) [data-click="NEW_GAME"] {
	display: none;
}

#main-menu:not(.start) .title {
	display: none;
}

.loading {
	position: absolute;
	inset: 0;
	z-index: 1;
	justify-content: center;
	align-items: center;
	background-color: white;
	gap: 10%;
	background-color: var(--bg-color-container);
}

.loading > span {
	font-size: calc(var(--game-width) * 0.085);
}

.loading .row {
	justify-content: space-between;
	height: calc(var(--game-width) * 0.05);
	width: calc(var(--game-width) * 0.8);
}

.loading .progress-track {
	background-color: var(--bg-color-btn-light);
	padding: 0;
	overflow: hidden;
	justify-content: flex-start;
	width: 85%;
	height: 100%;
}

.loading .progress-thumb {
	height: 100%;
	background-color: var(--bg-color-btn-hover);
	width: 0%;
	transition: width 100ms;
}

.menu-btns {
	justify-content: center;
	gap: calc(var(--game-width) * 0.015);
}

.btn {
	color: var(--txt-color-light);
	padding: calc(var(--game-width) * 0.01) calc(var(--game-width) * 0.04);
	display: flex;
	justify-content: center;
	transition-property: background-color, color;
	transition-duration: 125ms;
	border-radius: calc(var(--game-width) * 0.01);
	border: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
}

.btn-primary {
	white-space: nowrap;
	background-color: var(--bg-color-btn);
	color: var(--txt-color-light);
	text-shadow: none;
}

@media (hover: hover) {
	.btn-primary:hover {
		color: var(--txt-color-hover);
		background-color: var(--bg-color-btn-hover);
	}
}

.btn-secondary {
	color: var(--txt-color-dark);
}

@media (hover: hover) {
	.btn-secondary:hover {
		color: var(--txt-color-hover);
		background-color: var(--bg-color-btn-hover);
	}
}

.menu-content {
	display: none;
}

.menu-content:has(.open) {
	display: grid;
	place-items: center;
}

.grid-center {
	display: grid;
	place-items: center;
}

.container {
	display: flex;
	flex-direction: column;
	justify-content: center;
	background-color: var(--bg-color-container);
	position: absolute;
	inset: 0;
	padding: calc(var(--game-width) * 0.07) calc(var(--game-width) * 0.07);
}

#main-menu .container,
#main-menu:not(.start).container {
	inset: 50% auto auto 50%;
	translate: -50% -50%;
	width: calc(var(--game-width) * 0.8);
	height: calc(var(--game-height) * 0.8);
	border-radius: calc(var(--game-width) * 0.01);
}

.container:not(.open) {
	display: none !important;
}

.close-btn {
	font-family: "Permanent Marker";
	--size: calc(var(--game-width) * 0.04);
	--inset-size: calc(var(--size) / 3);
	width: var(--size);
	height: var(--size);
	border-radius: 999px;
	padding: 0;
	display: grid;
	place-items: center;
	line-height: 100%;
	position: absolute;
	inset: var(--inset-size) var(--inset-size) auto auto;
}

#keyBinds {
	transform: translateZ(0);
	display: flex;
	flex-direction: column;
	gap: calc(var(--game-width) * 0.02);
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	height: 100%;
	position: relative;
	padding-top: 10px;

	--big-size: calc(var(--game-width) * 0.04 * 1.5);
	--small-size: calc(var(--game-width) * 0.014 * 1.5);
	background: 
		/* Shadow Cover TOP */ linear-gradient(var(--bg-color-container) 30%, rgba(255, 255, 255, 0)),
		/* Shadow Cover BOTTOM */ linear-gradient(rgba(255, 255, 255, 0), var(--bg-color-container) 70%) 0 100%,
		/* Shadow TOP */ radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0)),
		/* Shadow BOTTOM */ radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0)) 0 100%;

	background-repeat: no-repeat;
	background-size: 100% var(--big-size), 100% var(--big-size), 100% var(--small-size), 100% var(--small-size);
	background-attachment: local, local, scroll, scroll;
}

#keyBinds .row {
	overflow: hidden;
	min-height: calc(var(--game-width) * 0.06);
	justify-content: space-between;
}

#keyBinds .action {
	white-space: nowrap;
}

#keyBinds .key {
	--size: calc(var(--game-width) * 0.05);
	font-family: "Keyboard";
	font-size: var(--size);
	line-height: 100%;
	cursor: var(--cursor-pointer);
	padding: 0.04em 0.4em;
}

#keyBinds .key span {
	--size: inherit;
	translate: 0 calc(var(--size) * 0.5);
	pointer-events: none;
}

#keyBinds .key:hover {
	background-color: var(--bg-color-btn-hover);
}

#keyBindModal:not(.open) {
	display: none;
}

#keyBindModal.open {
	position: fixed;
	inset: 0;
	display: grid;
	place-items: center;
	background-color: #00000030;
}

.confirmation .key {
	color: white;
	background-color: var(--bg-color-btn);
	border-radius: 0.2em;
	padding: 0.2em;
}

.confirmation .action {
	color: white;
	background-color: var(--bg-color-btn);
	border-radius: 0.2em;
	padding: 0.2em;
}

#gui {
	width: var(--game-width);
	height: var(--game-height);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	transition: filter 125ms;
	padding: calc(var(--game-width) * 0.01);
}

#gui-content {
	flex-grow: 1;
}

#keyBindModal > div {
	width: 30%;
	height: 15%;
}

#gui :is(header, footer) {
	/* height: calc(var(--game-width) * 0.0865); */
	justify-content: space-between;
	align-items: center;
	padding: 0 calc(var(--game-width) * 0.01);
}

#gui header {
	justify-content: space-between;
	align-items: flex-start;
}

/* #gui .fullscreen:not(.active) img:last-of-type {
	display: none;
}

#gui .fullscreen.active img:first-of-type {
	display: none;
} */

.btn-input {
	--size: calc(var(--game-width) * 0.08);
	border-radius: 999px;
	width: var(--size);
	height: var(--size);
	padding: 0;
	display: grid;
	place-items: center;
	opacity: 0.75;
	position: relative;
}

.btn-input .keyboard {
	position: absolute;
	font-family: "Keyboard";
	font-size: calc(var(--game-width) * 0.04);
	line-height: 100%;
	pointer-events: none;
}

@media (hover: none) {
	.btn-input .keyboard {
		display: none;
	}
}

.keyboard::before {
	content: "";
	position: absolute;
	inset: calc(var(--game-width) * 0.004) calc(var(--game-width) * 0.004) calc(var(--game-width) * 0.004)
		calc(var(--game-width) * 0.003);
	background-color: #00000050;
	border-radius: calc(var(--game-width) * 0.007);
}

.keyboard span {
	display: block;
	translate: 0 50%;
}

.keyboard.ul {
	inset: -20% auto auto -20%;
}

.keyboard.ur {
	inset: -20% -20% auto auto;
}

.keyboard.dl {
	inset: auto auto -20% -20%;
}

.keyboard.dr {
	inset: auto -20% -20% auto;
}

.keyboard.space {
	translate: -40% 0;
	scale: 0.5 1;
}

#gui .btn-input img {
	filter: invert(1);
	width: 75%;
	pointer-events: none;
}

.confirmation-container {
	position: fixed;
	inset: 0;
	background-color: #00000010;
	display: grid;
	place-items: center;
}

.confirmation {
	background-color: var(--bg-color-container);
	padding: calc(var(--game-width) * 0.05);
	gap: calc(var(--game-width) * 0.05);
	border-radius: calc(var(--game-width) * 0.01);
}

.confirmation .row {
	gap: calc(var(--game-width) * 0.02);
}

.audio-options {
	padding: 0 calc(var(--game-width) * 0.04);
}

.audio-options > div {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

input[type="range"] {
	-webkit-appearance: none;
	appearance: none;
	background: transparent;
	cursor: var(--cursor-pointer);
	width: calc(var(--game-width) * 0.2);
}

input[type="range"]::-webkit-slider-runnable-track {
	/*  { */
	background-color: var(--bg-color-btn-light);
	height: calc(var(--game-width) * 0.02);
	border-radius: calc(var(--game-width) * 0.0075);
	border: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
}

input[type="range"]::-moz-range-track {
	background-color: var(--bg-color-btn-light);
	height: calc(var(--game-width) * 0.02);
	border-radius: calc(var(--game-width) * 0.0075);
	outline: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
}

input[type="range"]::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	width: calc(var(--game-width) * 0.02);
	height: calc(var(--game-width) * 0.03);
	background-color: var(--bg-color-btn);
	border-radius: calc(var(--game-width) * 0.0075);
	outline: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
	margin-top: calc(calc(var(--game-width) * 0.01) - calc(var(--game-width) * 0.0175));
}

input[type="range"]::-moz-range-thumb {
}

input[type="checkbox"] {
	position: relative;
	appearance: none;
	width: calc(var(--game-width) * 0.025);
	height: calc(var(--game-width) * 0.025);
	background-color: var(--bg-color-btn-light);
	border-radius: calc(var(--game-width) * 0.0075);
	outline: calc(var(--game-width) * 0.003) solid var(--border-color-btn);
	cursor: var(--cursor-pointer);
}

input[type="checkbox"]:checked::after {
	position: absolute;
	inset: 0;
	content: "";
	background: url(app/assets/img/gui/check.png) center/80% no-repeat;
}

#game:has(#main-menu.open) #gui * {
	animation-play-state: paused;
}

#countdown {
	position: absolute;
	inset: 0;
	margin: auto;
	font-size: 3em;
	color: var(--bg-color-btn-light);
	display: flex;
	justify-content: center;
	pointer-events: none;
}

#countdown span {
	position: relative;
	line-height: 100%;
	z-index: 1;
	display: flex;
	justify-content: center;
	align-items: center;
	text-shadow: 1px 0 0 var(--border-color-btn), -1px 0 0 var(--border-color-btn), 0 1px 0 var(--border-color-btn),
		0 -1px var(--border-color-btn);
	opacity: 0;
}

#countdown span.active {
	animation: count-down-zoom 900ms;
}

@keyframes count-down-zoom {
	0% {
		opacity: 1;
	}
	80% {
		scale: 2;
	}
	99% {
		opacity: 0;
	}
	100% {
		display: none;
	}
}

#mid-section {
	flex-grow: 1;
	/* background-color: black; */
}

.status-container {
	padding: 2%;
	height: 100%;
	gap: calc(var(--game-width) * 0.015);
	/* background-color: red; */
}

#statuses img {
	/* outline: 1px solid red; */
	height: 100%;
}

.status-bar.error {
	animation: error 350ms;
	--shadow-blur: calc(var(--game-width) * 0.01);
	filter: drop-shadow(0 0 var(--shadow-blur) red);
}

@keyframes error {
	10%,
	50%,
	90% {
		translate: calc(var(--game-width) * -0.01);
	}
	30%,
	70% {
		translate: calc(var(--game-width) * 0.01);
	}
}

.status-bar {
	display: flex;
	align-items: center;
	justify-content: center;
	gap: calc(var(--game-width) * 0.02);
	font-size: 0.7em;
	background: linear-gradient(white, transparent 50% 100%);
	background-color: hsl(45, 80%, 70%);
	width: calc(var(--game-width) * 0.3);
	height: calc(var(--game-width) * 0.025);
	position: relative;
	outline: calc(var(--game-width) * 0.003) solid white;
	border-radius: 9999px;
}

.status-bar > span {
	z-index: 2;
}

.status-bar::after {
	background: inherit;
	--value: inherit;
	content: "";
	position: absolute;
	inset: 0;
	display: block;
	width: calc(var(--value) * 100%);
	border-radius: inherit;
	transition: width 125ms;
}

.status-bar.health::after {
	background-color: hsl(120, 60%, 60%);
}

.status-bar.bottle::after {
	background-color: hsl(20, 70%, 60%);
}

.status-bar.potion::after {
	background-color: hsl(120, 70%, 40%);
}

.status-bar.coin::after {
	background-color: hsl(180, 70%, 45%);
}

.status-bar::before {
	display: block;
	content: "";
	background: var(--icon) center/100% no-repeat;
	height: 2.5em;
	aspect-ratio: 1;
	z-index: 1;
	position: absolute;
	left: 0;
	translate: -50% 0;
}
